#version 430 core
layout(binding = 0,rgba32f) uniform image2D horizontal;//当前缓冲  
layout(binding = 1,rgba32f) uniform image2D vertical;//之前缓冲
layout (local_size_x = 1,local_size_y = 1,local_size_z = 1)in;
const float weight[5] = float[] (0.227027, 0.1945946, 0.1216216, 0.054054, 0.016216);
void main(void)
{ 
	ivec2 index = ivec2(int(gl_GlobalInvocationID.x),int(gl_GlobalInvocationID.y));
	vec3 result;
	for(int x = 0;x < 1;++x){
		result  = imageLoad(horizontal,index).rgb*weight[0];
		result += imageLoad(horizontal, index + ivec2(1, 0)).rgb * weight[1];
		result += imageLoad(horizontal, index - ivec2(1, 0)).rgb * weight[1];
		result += imageLoad(horizontal, index + ivec2(2, 0)).rgb * weight[2];
		result += imageLoad(horizontal, index - ivec2(2, 0)).rgb * weight[2];
		result += imageLoad(horizontal, index + ivec2(3, 0)).rgb * weight[3];
		result += imageLoad(horizontal, index - ivec2(3, 0)).rgb * weight[3];
		result += imageLoad(horizontal, index + ivec2(4, 0)).rgb * weight[4];
		result += imageLoad(horizontal, index - ivec2(4, 0)).rgb * weight[4];
		imageStore(vertical,index,vec4(result,1.0f));
		barrier();
			
		result  = imageLoad(vertical,index).rgb*weight[0];
		result += imageLoad(vertical, index + ivec2(0, 1)).rgb * weight[1];
		result += imageLoad(vertical, index - ivec2(0, 1)).rgb * weight[1];
		result += imageLoad(vertical, index + ivec2(0, 2)).rgb * weight[2];
		result += imageLoad(vertical, index - ivec2(0, 2)).rgb * weight[2];
		result += imageLoad(vertical, index + ivec2(0, 3)).rgb * weight[3];
		result += imageLoad(vertical, index - ivec2(0, 3)).rgb * weight[3];
		result += imageLoad(vertical, index + ivec2(0, 4)).rgb * weight[4];
		result += imageLoad(vertical, index - ivec2(0, 4)).rgb * weight[4];
		imageStore(horizontal,index,vec4(result,1.0f));
		barrier();
	}
}
